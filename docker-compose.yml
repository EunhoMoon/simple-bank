services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    container_name: rabbitmq
    extends:
      file: common-config.yml
      service: microservice-base-config

  redis:
    image: redis
    ports:
      - "6379:6379"
    container_name: redis
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      timeout: 10s
      retries: 10
    extends:
      file: common-config.yml
      service: network-deploy-service

  accounts-db:
    container_name: accounts-db
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: accounts
    extends:
      file: common-config.yml
      service: microservice-database-config

  cards-db:
    container_name: cards-db
    ports:
      - "3308:3306"
    environment:
      MYSQL_DATABASE: cards
    extends:
      file: common-config.yml
      service: microservice-database-config

  loans-db:
    container_name: loans-db
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: loans
    extends:
      file: common-config.yml
      service: microservice-database-config

  config-server:
    build: ./configserver
    ports:
      - "8071:8071"
    container_name: config-server
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8071/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    extends:
      file: common-config.yml
      service: microservice-base-config

  eureka-server:
    build: ./eurekaserver
    ports:
      - "8761:8761"
    container_name: eureka-server
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: eurekaserver
      SPRING_CONFIG_IMPORT: configserver:http://config-server:8071/
      EUREKA_INSTANCE_HOSTNAME: eureka-server
    extends:
      file: common-config.yml
      service: microservice-base-config

  accounts:
    build: ./accounts
    ports:
      - "8999:8999"
    container_name: accounts
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8999/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    environment:
      SPRING_APPLICATION_NAME: accounts
      SPRING_DATASOURCE_URL: jdbc:mysql://accounts-db:3306/accounts
    depends_on:
      accounts-db:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-config-server-config

  cards:
    build: ./cards
    ports:
      - "8998:8998"
    container_name: cards
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8998/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    environment:
      SPRING_APPLICATION_NAME: cards
      SPRING_DATASOURCE_URL: jdbc:mysql://cards-db:3306/cards
    depends_on:
      cards-db:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-config-server-config

  loans:
    build: ./loans
    ports:
      - "8997:8997"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8997/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    container_name: loans
    environment:
      SPRING_APPLICATION_NAME: loans
      SPRING_DATASOURCE_URL: jdbc:mysql://loans-db:3306/loans
    depends_on:
      loans-db:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-config-server-config

  gatewayserver:
    build: ./gatewayserver
    ports:
      - "8072:8072"
    container_name: gatewayserver
    environment:
      SPRING_APPLICATION_NAME: gatewayserver
      SPRING_DATA_REDIS_CONNECTION_TIMEOUT: 2s
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_TIMEOUT: 1s
    depends_on:
      accounts:
        condition: service_healthy
      cards:
        condition: service_healthy
      loans:
        condition: service_healthy
      redis:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-config-server-config

networks:
  backend:
    driver: bridge